cmake_minimum_required(VERSION 2.8)
set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-reorder -std=c++11")
project(opengl-tutorials)

set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

set(LOGLE_WINDOWS_DEPS ${CMAKE_SOURCE_DIR}/lib/libsoil2.lib ${CMAKE_SOURCE_DIR}/lib/glfw3.lib opengl32.lib)
set(LOGLE_UNIX_DEPS ${CMAKE_BINARY_DIR}/lib/libglfw3.a ${CMAKE_BINARY_DIR}/lib/libsoil2.a ${GLFW_STATIC_LIBRARIES})
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/lib)
add_subdirectory(core)
add_subdirectory(shader)
add_subdirectory(render)
add_subdirectory(input)
include_directories(core shader render input glfw glm .)

add_executable(example ModelLoading.cpp)

if(UNIX)
	message(STATUS "Linking libraries for linux...")
        message(STATUS ${GLFW_STATIC_LIBRARIES})
	target_link_libraries(example render core ${LOGLE_UNIX_DEPS})
elseif(WIN32)
	message(STATUS "Linking libraries for windows...")
	target_link_libraries(example render core ${LOGLE_WINDOWS_DEPS})
else()
	message(SEND_ERROR "Sorry, this OS is not supported yet")
endif()